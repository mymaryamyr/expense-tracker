{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/Header/Header.js","components/NewExpense/ExpensForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","expense","title","amount","onClick","handleRemove","id","ExpenseList","filteredItems","length","map","itemId","onRemoveItem","ExpensesFilter","value","selected","onChange","e","onChangeFilter","target","ChartBar","maxValue","label","barHeight","Math","round","style","height","Chart","dataPointsValues","dataPoints","d","totalMax","max","dataPoint","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filtertedExpenses","filter","toString","selectedYear","Header","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","NewExpense","submitedExpenseData","expensData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","newExpense","prevState","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f3ed7a0.chunk.js","sourcesContent":["import '../UI/Card.css';\r\n\r\nconst Card = (props) => {\r\n    const classes = `card ${props.className}`\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n    const month = props.date.toLocaleString('en-US', { month: 'long' })\r\n    const day = props.date.toLocaleString('en-US', { day: '2-digit' })\r\n    const year = props.date.getFullYear()\r\n    return (\r\n        <div className='expense-date'>\r\n            <div className='expense-date__month'>{month}</div>\r\n            <div className='expense-date__day'>{day}</div>\r\n            <div className='expense-date__year'>{year}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseDate;","import React from 'react';\r\nimport Card from '../UI/Card';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport './ExpenseItem.css';\r\n\r\nconst ExpenseItem = (props) => {\r\n\r\n    const expense = props.expense\r\n    const handleRemove = () => {\r\n        props.handleRemove(expense.id)\r\n    }\r\n    return (\r\n        <li>\r\n            <Card className=\"expense-item\">\r\n                <ExpenseDate date={expense.date} />\r\n                <div className=\"expense-item__description\">\r\n                    <h2>{expense.title}</h2>\r\n                    <div className=\"expense-item__price\">${expense.amount}</div>\r\n                    <button className=\"expense-item__remove\" onClick={handleRemove}>&#10006;</button>\r\n                </div>\r\n            </Card>\r\n        </li>\r\n    )\r\n\r\n}\r\n\r\nexport default ExpenseItem;","import ExpenseItem from './ExpenseItem'\r\nimport './ExpensesList.css'\r\n\r\nconst ExpenseList = props => {\r\n    if (props.filteredItems.length === 0) {\r\n        return (\r\n            <h2 className=\"expenses-list__fallback\">\r\n                No expenses found!\r\n            </h2>\r\n        )\r\n    } else {\r\n        return (\r\n            <ul className=\"expenses-list\">\r\n                {props.filteredItems.map(expense =>\r\n                    <ExpenseItem\r\n                        key={expense.id}\r\n                        expense={expense}\r\n                        handleRemove={(itemId) => props.onRemoveItem(itemId)}\r\n                    />\r\n                )}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ExpenseList;","import './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n    // const dropdownChangeHandler = (e) => {\r\n    //     props.onChangeFilter(e.target.value)\r\n    // }\r\n    return (\r\n        <div className='expenses-filter'>\r\n            <div className='expenses-filter__control'>\r\n                <label>Filter by year</label>\r\n                <select value={props.selected} onChange={(e) => props.onChangeFilter(e.target.value)}>\r\n                    <option value='2022'>2022</option>\r\n                    <option value='2021'>2021</option>\r\n                    <option value='2020'>2020</option>\r\n                    <option value='2019'>2019</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ChartBar.css';\r\n\r\nconst ChartBar = ({ value, maxValue, label }) => {\r\n\r\n    let barHeight = '0'\r\n    if (maxValue > 0) {\r\n        barHeight = Math.round((value / maxValue) * 100) + '%'\r\n    }\r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" style={{ height: barHeight }}>\r\n                </div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">\r\n                {label}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartBar;","import './Chart.css';\r\nimport ChartBar from './ChartBar';\r\n\r\nconst Chart = props => {\r\n    const dataPointsValues = props.dataPoints.map(d => d.value)\r\n    const totalMax = Math.max(...dataPointsValues)\r\n    return (\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map(dataPoint =>\r\n                <ChartBar\r\n                    key={dataPoint.label}\r\n                    value={dataPoint.value}\r\n                    maxValue={totalMax}\r\n                    label={dataPoint.label}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import Chart from \"../Chart/Chart\"\r\n\r\nconst ExpensesChart = props => {\r\n    const chartDataPoints = [\r\n        { label: 'Jan', value: 0 },\r\n        { label: 'Feb', value: 0 },\r\n        { label: 'Mar', value: 0 },\r\n        { label: 'Apr', value: 0 },\r\n        { label: 'May', value: 0 },\r\n        { label: 'Jun', value: 0 },\r\n        { label: 'Jul', value: 0 },\r\n        { label: 'Aug', value: 0 },\r\n        { label: 'Sep', value: 0 },\r\n        { label: 'Oct', value: 0 },\r\n        { label: 'Nov', value: 0 },\r\n        { label: 'Dec', value: 0 },\r\n    ]\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth() //Jan => 0\r\n        chartDataPoints[expenseMonth].value += expense.amount\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints} />\r\n}\r\n\r\nexport default ExpensesChart;","import { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport './Expenses.css';\r\nimport ExpenseList from './ExpensesList'\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst Expenses = (props) => {\r\n\r\n    const [filteredYear, setFilteredYear] = useState('2021');\r\n\r\n    const filterChangeHandler = selectedYear => {\r\n        setFilteredYear(selectedYear);\r\n    };\r\n    const filtertedExpenses = props.expenses.filter(expense => {\r\n        return expense.date.getFullYear().toString() === filteredYear;\r\n    })\r\n\r\n    return (\r\n        <Card className=\"expenses\">\r\n            <ExpensesFilter\r\n                selected={filteredYear}\r\n                onChangeFilter={filterChangeHandler}\r\n            />\r\n            <ExpensesChart expenses={filtertedExpenses} />\r\n            <ExpenseList filteredItems={filtertedExpenses} onRemoveItem={props.onRemoveItem} />\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Expenses;","import Card from \"../UI/Card\";\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <Card className=\"header\">\r\n            <h1 className=\"header__title\">Expense Tracker</h1>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Header;","import { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n\r\n    const [enteredTitle, setEnteredTitle] = useState('')\r\n    const [enteredAmount, setEnteredAmount] = useState('')\r\n    const [enteredDate, setEnteredDate] = useState('')\r\n    //alternative approach:\r\n    // const [userInput, setUserInput] = useState({\r\n    //     enteredTitle: '',\r\n    //     enteredAmount: '',\r\n    //     enteredDate: '',\r\n    // })\r\n\r\n    const titleChangeHandler = (e) => {\r\n        setEnteredTitle(e.target.value)\r\n        // userInput((prevState) => {\r\n        //     return {\r\n        //         ...prevState,\r\n        //         enteredTitle: e.target.value\r\n        //     }\r\n        // })\r\n    }\r\n    const amountChangeHandler = (e) => {\r\n        setEnteredAmount(e.target.value)\r\n    }\r\n    const dateChangeHandler = (e) => {\r\n        setEnteredDate(e.target.value)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate),\r\n        }\r\n        props.onSaveExpenseData(expenseData)\r\n\r\n        setEnteredTitle('')\r\n        setEnteredAmount('')\r\n        setEnteredDate('')\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={enteredTitle}\r\n                        onChange={titleChangeHandler}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={enteredAmount}\r\n                        min=\"0.01\"\r\n                        step=\"0.01\"\r\n                        onChange={amountChangeHandler}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        value={enteredDate}\r\n                        min=\"2010-01-01\"\r\n                        max=\"2022-12-31\"\r\n                        onChange={dateChangeHandler}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ExpenseForm;","import ExpenseForm from \"./ExpensForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n\r\n    const saveExpenseDataHandler = (submitedExpenseData) => {\r\n        const expensData = {\r\n            ...submitedExpenseData,\r\n            id: Math.random().toString()\r\n        }\r\n        props.onAddExpense(expensData)\r\n    }\r\n    return (\r\n        <div className=\"new-expense\">\r\n            <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewExpense;","import { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport Header from \"./components/Header/Header\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e0',\n    title: 'Iphone',\n    amount: 994.9,\n    date: new Date(2020, 2, 7),\n  },\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: 'e2',\n    title: 'New TV',\n    amount: 799.49,\n    date: new Date(2021, 2, 12)\n  },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n]\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES)\n\n  const addExpenseHandler = (newExpense) => {\n    setExpenses((prevState) => {\n      return [newExpense, ...prevState]\n    })\n  }\n  const removeExpenseHandler = (itemId) => {\n    setExpenses((prevState) => {\n      return prevState.filter(item => item.id !== itemId)\n    })\n  }\n  return (\n    <div>\n      <Header />\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses expenses={expenses} onRemoveItem={removeExpenseHandler} />\n    </div>\n  );\n\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}